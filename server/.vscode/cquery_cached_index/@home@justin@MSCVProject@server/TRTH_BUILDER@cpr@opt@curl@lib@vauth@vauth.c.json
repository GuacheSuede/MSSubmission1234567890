16
{"last_modification_time":1548181616,"language":1,"import_file":"/home/justin/MSCVProject/server/TRTH_BUILDER/cpr/opt/curl/lib/vauth/vauth.c","args_hash":9663435869478324962,"includes":[{"line":26,"resolved_path":"/home/justin/MSCVProject/server/TRTH_BUILDER/cpr/opt/curl/lib/vauth/vauth.h"}],"dependencies":[],"skipped_by_preprocessor":["69:1-105:7","139:1-144:7"],"types":[{"id":0,"usr":13,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[0,1,2,3,4,5],"uses":[]}],"funcs":[{"id":0,"usr":14870812086150971385,"detailed_name":"char *Curl_auth_build_spn(const char *service, const char *host, const char *realm)","short_name_offset":6,"short_name_size":19,"kind":12,"storage":1,"hover":"","comments":"","declarations":[],"spell":"53:7-53:26|-1|1|2","extent":"53:1-68:2|-1|1|0","bases":[],"derived":[],"vars":[0,1,2,3],"uses":[],"callees":[]},{"id":1,"usr":12701852279656965535,"detailed_name":"int Curl_auth_user_contains_domain(const char *user)","short_name_offset":4,"short_name_size":30,"kind":12,"storage":1,"hover":"","comments":"\nCurl_auth_user_contains_domain()\n\nThis is used to test if the specified user contains a Windows domain name as\nfollows:\n\nUser\\Domain (Down-level Logon Name)\nUser/Domain (curl Down-level format - for compatibility with existing code)\nUser@Domain (User Principal Name)\n\nNote: The user name may be empty when using a GSS-API library or Windows SSPI\nas the user and domain are either obtained from the credientals cache when\nusing GSS-API or via the currently logged in user's credientals when using\nWindows SSPI.\n\nParameters:\n\nuser  [in] - The user name.\n\nReturns TRUE on success; otherwise FALSE.","declarations":[],"spell":"128:6-128:36|-1|1|2","extent":"128:1-147:2|-1|1|0","bases":[],"derived":[],"vars":[4,5],"uses":[],"callees":[]}],"vars":[{"id":0,"usr":17892532056698942362,"detailed_name":"const char *service","short_name_offset":12,"short_name_size":7,"hover":"","comments":"","declarations":[],"spell":"53:39-53:46|0|3|2","extent":"53:27-53:46|0|3|0","type":0,"uses":["60:31-60:38|0|3|12","62:28-62:35|0|3|12","64:28-64:35|0|3|12"],"kind":253,"storage":1},{"id":1,"usr":6135925934057953104,"detailed_name":"const char *host","short_name_offset":12,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"53:60-53:64|0|3|2","extent":"53:48-53:64|0|3|0","type":0,"uses":["59:6-59:10|0|3|12","60:40-60:44|0|3|12","61:11-61:15|0|3|12","62:37-62:41|0|3|12"],"kind":253,"storage":1},{"id":2,"usr":12836943414815323708,"detailed_name":"const char *realm","short_name_offset":12,"short_name_size":5,"hover":"","comments":"","declarations":[],"spell":"54:39-54:44|0|3|2","extent":"54:27-54:44|0|3|0","type":0,"uses":["59:14-59:19|0|3|12","60:46-60:51|0|3|12","63:11-63:16|0|3|12","64:37-64:42|0|3|12"],"kind":253,"storage":1},{"id":3,"usr":2755639096893377661,"detailed_name":"char *spn","short_name_offset":6,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"56:9-56:12|0|3|2","extent":"56:3-56:12|0|3|0","type":0,"uses":["60:5-60:8|0|3|20","62:5-62:8|0|3|20","64:5-64:8|0|3|20","67:10-67:13|0|3|12"],"kind":13,"storage":1},{"id":4,"usr":2606904550511269647,"detailed_name":"const char *user","short_name_offset":12,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"128:49-128:53|1|3|2","extent":"128:37-128:53|1|3|0","type":0,"uses":["132:6-132:10|1|3|12","132:15-132:19|1|3|12","134:23-134:27|1|3|12"],"kind":253,"storage":1},{"id":5,"usr":1788890929738718548,"detailed_name":"char *p","short_name_offset":6,"short_name_size":1,"hover":"char *p = strpbrk(user, \"\\\\/@\")","comments":"Check we have a domain name or UPN present","declarations":[],"spell":"134:11-134:12|1|3|2","extent":"134:5-134:36|1|3|0","type":0,"uses":[],"kind":13,"storage":1}]}