16
{"last_modification_time":1548363167,"language":1,"import_file":"/home/justin/MSCVProject/database/mongo-c-driver-1.13.1/src/zlib-1.2.11/examples/gzlog.c","args_hash":10433645398913005206,"includes":[],"dependencies":["/home/justin/MSCVProject/database/mongo-c-driver-1.13.1/src/zlib-1.2.11/examples/gzlog.c","/usr/include/x86_64-linux-gnu/sys/types.h","/usr/include/features.h","/usr/include/x86_64-linux-gnu/sys/cdefs.h","/usr/include/x86_64-linux-gnu/gnu/stubs.h","/usr/include/x86_64-linux-gnu/bits/types.h","/usr/include/x86_64-linux-gnu/bits/types/clock_t.h","/usr/include/x86_64-linux-gnu/bits/types/clockid_t.h","/usr/include/x86_64-linux-gnu/bits/types/time_t.h","/usr/include/x86_64-linux-gnu/bits/types/timer_t.h","/usr/include/x86_64-linux-gnu/bits/stdint-intn.h","/usr/include/endian.h","/usr/include/x86_64-linux-gnu/bits/byteswap.h","/usr/include/x86_64-linux-gnu/bits/uintn-identity.h","/usr/include/x86_64-linux-gnu/sys/select.h","/usr/include/x86_64-linux-gnu/bits/select.h","/usr/include/x86_64-linux-gnu/bits/types/sigset_t.h","/usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h","/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h","/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h","/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h","/usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h","/usr/include/stdio.h","/usr/include/x86_64-linux-gnu/bits/libc-header-start.h","/usr/include/x86_64-linux-gnu/bits/types/__fpos_t.h","/usr/include/x86_64-linux-gnu/bits/types/__fpos64_t.h","/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h","/usr/include/stdlib.h","/usr/include/x86_64-linux-gnu/bits/floatn.h","/usr/include/x86_64-linux-gnu/bits/floatn-common.h","/usr/include/alloca.h","/usr/include/string.h","/usr/include/x86_64-linux-gnu/bits/types/locale_t.h","/usr/include/strings.h","/usr/include/fcntl.h","/usr/include/x86_64-linux-gnu/bits/fcntl.h","/usr/include/unistd.h","/usr/include/x86_64-linux-gnu/bits/environments.h","/usr/include/x86_64-linux-gnu/bits/getopt_posix.h","/usr/include/errno.h","/usr/include/x86_64-linux-gnu/bits/errno.h","/usr/include/linux/errno.h","/usr/include/x86_64-linux-gnu/asm/errno.h","/usr/include/asm-generic/errno.h","/usr/include/time.h","/usr/include/x86_64-linux-gnu/bits/time.h","/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h","/usr/include/x86_64-linux-gnu/bits/types/struct_itimerspec.h","/usr/include/x86_64-linux-gnu/sys/stat.h","/usr/include/x86_64-linux-gnu/sys/time.h","/usr/include/zlib.h","/usr/include/zconf.h","/usr/local/lib/clang/7.0.0/include/stddef.h","/usr/local/lib/clang/7.0.0/include/limits.h","/usr/include/limits.h","/usr/include/x86_64-linux-gnu/bits/posix1_lim.h","/usr/include/x86_64-linux-gnu/bits/local_lim.h","/usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h","/usr/local/lib/clang/7.0.0/include/stdarg.h","/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h","/usr/include/x86_64-linux-gnu/bits/types/__FILE.h","/usr/include/x86_64-linux-gnu/bits/types/FILE.h","/usr/include/x86_64-linux-gnu/bits/sys_errlist.h","/usr/include/x86_64-linux-gnu/bits/waitflags.h","/usr/include/x86_64-linux-gnu/bits/types/__locale_t.h","/usr/include/x86_64-linux-gnu/bits/stat.h","/usr/include/x86_64-linux-gnu/bits/confname.h","/usr/include/x86_64-linux-gnu/bits/getopt_core.h","/usr/local/lib/clang/7.0.0/include/__stddef_max_align_t.h","/usr/include/stdc-predef.h","/usr/include/x86_64-linux-gnu/bits/wordsize.h","/usr/include/x86_64-linux-gnu/gnu/stubs-64.h","/usr/include/x86_64-linux-gnu/bits/typesizes.h","/usr/include/x86_64-linux-gnu/bits/endian.h","/usr/include/x86_64-linux-gnu/bits/stdio_lim.h","/usr/include/x86_64-linux-gnu/bits/waitstatus.h","/usr/include/x86_64-linux-gnu/bits/stdlib-float.h","/usr/include/x86_64-linux-gnu/bits/fcntl-linux.h","/usr/include/x86_64-linux-gnu/bits/posix_opt.h","/usr/include/asm-generic/errno-base.h","/usr/include/linux/limits.h","/usr/include/x86_64-linux-gnu/bits/posix2_lim.h"],"skipped_by_preprocessor":[],"types":[{"id":0,"usr":2,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":[]},{"id":1,"usr":14901958575215972723,"detailed_name":"gzlog","short_name_offset":0,"short_name_size":5,"kind":252,"hover":"typedef void gzlog","comments":"gzlog object type","declarations":[],"spell":"52:14-52:19|-1|1|2","extent":"52:1-52:19|-1|1|0","alias_of":0,"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["52:14-52:19|-1|1|4","66:1-66:6|-1|1|4","77:17-77:22|-1|1|4","85:20-85:25|-1|1|4","89:17-89:22|-1|1|4"]},{"id":2,"usr":5778908825573379114,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["77:41-77:47|-1|1|4"]}],"funcs":[{"id":0,"usr":15744043511064031994,"detailed_name":"gzlog *gzlog_open(char *path)","short_name_offset":7,"short_name_size":10,"kind":12,"storage":1,"hover":"","comments":"Open a gzlog object, creating the log file if it does not exist.  Return\nNULL on error.  Note that gzlog_open() could take a while to complete if it\nhas to wait to verify that a lock is stale (possibly for five minutes), or\nif there is significant contention with other instantiations of this object\nwhen locking the resource.  path is the prefix of the file names created by\nthis object.  If path is \"foo\", then the log file will be \"foo.gz\", and\nother auxiliary files will be created and destroyed during the process:\n\"foo.dict\" for a compression dictionary, \"foo.temp\" for a temporary (next)\ndictionary, \"foo.add\" for data being added or compressed, \"foo.lock\" for the\nlock file, and \"foo.repairs\" to log recovery operations performed due to\ninterrupted gzlog operations.  A gzlog_open() followed by a gzlog_close()\nwill recover a previously interrupted operation, if any.","declarations":[{"spell":"66:8-66:18|-1|1|1","param_spellings":["66:25-66:29"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":1,"usr":1044923501293878385,"detailed_name":"int gzlog_write(gzlog *log, void *data, size_t len)","short_name_offset":4,"short_name_size":11,"kind":12,"storage":1,"hover":"","comments":"Write to a gzlog object.  Return zero on success, -1 if there is a file i/o\nerror on any of the gzlog files (this should not happen if gzlog_open()\nsucceeded, unless the device has run out of space or leftover auxiliary\nfiles have permissions or ownership that prevent their use), -2 if there is\na memory allocation failure, or -3 if the log argument is invalid (e.g. if\nit was not created by gzlog_open()).  This function will write data to the\nfile uncompressed, until 1 MB has been accumulated, at which time that data\nwill be compressed.  The log file will be a valid gzip file upon successful\nreturn.","declarations":[{"spell":"77:5-77:16|-1|1|1","param_spellings":["77:24-77:27","77:35-77:39","77:48-77:51"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":2,"usr":15282391539733404865,"detailed_name":"int gzlog_compress(gzlog *log)","short_name_offset":4,"short_name_size":14,"kind":12,"storage":1,"hover":"","comments":"Force compression of any uncompressed data in the log.  This should be used\nsparingly, if at all.  The main application would be when a log file will\nnot be appended to again.  If this is used to compress frequently while\nappending, it will both significantly increase the execution time and\nreduce the compression ratio.  The return codes are the same as for\ngzlog_write().","declarations":[{"spell":"85:5-85:19|-1|1|1","param_spellings":["85:27-85:30"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":3,"usr":15676823370171076780,"detailed_name":"int gzlog_close(gzlog *log)","short_name_offset":4,"short_name_size":11,"kind":12,"storage":1,"hover":"","comments":"Close a gzlog object.  Return zero on success, -3 if the log argument is\ninvalid.  The log object is freed, and so cannot be referenced again.","declarations":[{"spell":"89:5-89:16|-1|1|1","param_spellings":["89:24-89:27"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]}],"vars":[{"id":0,"usr":9192152075376186958,"detailed_name":"GZLOG_H","short_name_offset":0,"short_name_size":7,"hover":"#define GZLOG_H","comments":"","declarations":[],"spell":"49:9-49:16|-1|1|2","extent":"49:9-49:16|-1|1|0","uses":[],"kind":255,"storage":0}]}