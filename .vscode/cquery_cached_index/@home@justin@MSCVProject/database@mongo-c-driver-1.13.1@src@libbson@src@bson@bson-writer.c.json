16
{"last_modification_time":1548363167,"language":1,"import_file":"/home/justin/MSCVProject/database/mongo-c-driver-1.13.1/src/libbson/src/bson/bson-writer.c","args_hash":10433645398913005206,"includes":[],"dependencies":[],"skipped_by_preprocessor":[],"types":[{"id":0,"usr":6644594841414722835,"detailed_name":"_bson_writer_t","short_name_offset":0,"short_name_size":14,"kind":23,"hover":"","comments":"","declarations":[],"spell":"22:8-22:22|-1|1|2","extent":"22:1-30:2|-1|1|0","bases":[],"derived":[],"types":[],"funcs":[],"vars":[0,1,2,3,4,5,6],"instances":[],"uses":[]},{"id":1,"usr":17,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[0,1,2,3,4,6,7,8,9,10,12,13,14,15,16,17],"uses":[]},{"id":2,"usr":2,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[5,11],"uses":[]}],"funcs":[{"id":0,"usr":8686976921605187814,"detailed_name":"int *bson_writer_new(int **buf, int *buflen, int offset, int realloc_func, void *realloc_func_ctx)","short_name_offset":5,"short_name_size":15,"kind":12,"storage":1,"hover":"","comments":"\n--------------------------------------------------------------------------\n\n bson_writer_new --\n\n       Creates a new instance of bson_writer_t using the buffer, length,\n       offset, and realloc() function supplied.\n\n       The caller is expected to clean up the structure when finished\n       using bson_writer_destroy().\n\n Parameters:\n       @buf: (inout): A pointer to a target buffer.\n       @buflen: (inout): A pointer to the buffer length.\n       @offset: The offset in the target buffer to start from.\n       @realloc_func: A realloc() style function or NULL.\n\n Returns:\n       A newly allocated bson_writer_t that should be freed with\n       bson_writer_destroy().\n\n Side effects:\n       None.\n\n--------------------------------------------------------------------------","declarations":[],"spell":"61:1-61:16|-1|1|2","extent":"60:1-78:2|-1|1|0","bases":[],"derived":[],"vars":[7,8,9,10,11],"uses":[],"callees":[]},{"id":1,"usr":11504559829583226504,"detailed_name":"void bson_writer_destroy(int *writer)","short_name_offset":5,"short_name_size":19,"kind":12,"storage":1,"hover":"","comments":"\n--------------------------------------------------------------------------\n\n bson_writer_destroy --\n\n       Cleanup after @writer and release any allocated memory. Note that\n       the buffer supplied to bson_writer_new() is NOT freed from this\n       method.  The caller is responsible for that.\n\n Returns:\n       None.\n\n Side effects:\n       None.\n\n--------------------------------------------------------------------------","declarations":[],"spell":"100:1-100:20|-1|1|2","extent":"99:1-103:2|-1|1|0","bases":[],"derived":[],"vars":[12],"uses":[],"callees":[]},{"id":2,"usr":5564280290253959503,"detailed_name":"int bson_writer_get_length(int *writer)","short_name_offset":4,"short_name_size":22,"kind":12,"storage":1,"hover":"","comments":"\n--------------------------------------------------------------------------\n\n bson_writer_get_length --\n\n       Fetches the current length of the content written by the buffer\n       (including the initial offset). This includes a partly written\n       document currently being written.\n\n       This is useful if you want to check to see if you've passed a given\n       memory boundary that cannot be sent in a packet. See\n       bson_writer_rollback() to abort the current document being written.\n\n Returns:\n       The number of bytes written plus initial offset.\n\n Side effects:\n       None.\n\n--------------------------------------------------------------------------","declarations":[],"spell":"129:1-129:23|-1|1|2","extent":"128:1-132:2|-1|1|0","bases":[],"derived":[],"vars":[13],"uses":[],"callees":[]},{"id":3,"usr":3807303725041557450,"detailed_name":"int bson_writer_begin(int *writer, int **bson)","short_name_offset":4,"short_name_size":17,"kind":12,"storage":1,"hover":"","comments":"\n--------------------------------------------------------------------------\n\n bson_writer_begin --\n\n       Begins writing a new document. The caller may use the bson\n       structure to write out a new BSON document. When completed, the\n       caller must call either bson_writer_end() or\n       bson_writer_rollback().\n\n Parameters:\n       @writer: A bson_writer_t.\n       @bson: (out): A location for a bson_t*.\n\n Returns:\n       true if the underlying realloc was successful; otherwise false.\n\n Side effects:\n       @bson is initialized if true is returned.\n\n--------------------------------------------------------------------------","declarations":[],"spell":"159:1-159:18|-1|1|2","extent":"158:1-211:2|-1|1|0","bases":[],"derived":[],"vars":[14,15],"uses":[],"callees":[]},{"id":4,"usr":1118269352871531461,"detailed_name":"void bson_writer_end(int *writer)","short_name_offset":5,"short_name_size":15,"kind":12,"storage":1,"hover":"","comments":"\n--------------------------------------------------------------------------\n\n bson_writer_end --\n\n       Complete writing of a bson_writer_t to the buffer supplied.\n\n Returns:\n       None.\n\n Side effects:\n       None.\n\n--------------------------------------------------------------------------","declarations":[],"spell":"231:1-231:16|-1|1|2","extent":"230:1-239:2|-1|1|0","bases":[],"derived":[],"vars":[16],"uses":[],"callees":[]},{"id":5,"usr":1462035044828987621,"detailed_name":"void bson_writer_rollback(int *writer)","short_name_offset":5,"short_name_size":20,"kind":12,"storage":1,"hover":"","comments":"\n--------------------------------------------------------------------------\n\n bson_writer_rollback --\n\n       Abort the appending of the current bson_t to the memory region\n       managed by @writer.  This is useful if you detected that you went\n       past a particular memory limit.  For example, MongoDB has 48MB\n       message limits.\n\n Returns:\n       None.\n\n Side effects:\n       None.\n\n--------------------------------------------------------------------------","declarations":[],"spell":"262:1-262:21|-1|1|2","extent":"261:1-271:2|-1|1|0","bases":[],"derived":[],"vars":[17],"uses":[],"callees":[]}],"vars":[{"id":0,"usr":17372308992980307395,"detailed_name":"int _bson_writer_t::ready","short_name_offset":20,"short_name_size":5,"hover":"","comments":"","declarations":[],"spell":"23:9-23:14|0|2|2","extent":"23:4-23:14|0|2|0","type":1,"uses":[],"kind":8,"storage":0},{"id":1,"usr":14556107915421973128,"detailed_name":"int **_bson_writer_t::buf","short_name_offset":22,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"24:14-24:17|0|2|2","extent":"24:4-24:17|0|2|0","type":1,"uses":[],"kind":8,"storage":0},{"id":2,"usr":18440560201135975229,"detailed_name":"int *_bson_writer_t::buflen","short_name_offset":21,"short_name_size":6,"hover":"","comments":"","declarations":[],"spell":"25:12-25:18|0|2|2","extent":"25:4-25:18|0|2|0","type":1,"uses":[],"kind":8,"storage":0},{"id":3,"usr":15851938816298905344,"detailed_name":"int _bson_writer_t::offset","short_name_offset":20,"short_name_size":6,"hover":"","comments":"","declarations":[],"spell":"26:11-26:17|0|2|2","extent":"26:4-26:17|0|2|0","type":1,"uses":[],"kind":8,"storage":0},{"id":4,"usr":834595361471230961,"detailed_name":"int _bson_writer_t::realloc_func","short_name_offset":20,"short_name_size":12,"hover":"","comments":"","declarations":[],"spell":"27:22-27:34|0|2|2","extent":"27:4-27:34|0|2|0","type":1,"uses":[],"kind":8,"storage":0},{"id":5,"usr":3889398801753365441,"detailed_name":"void *_bson_writer_t::realloc_func_ctx","short_name_offset":22,"short_name_size":16,"hover":"","comments":"","declarations":[],"spell":"28:10-28:26|0|2|2","extent":"28:4-28:26|0|2|0","type":2,"uses":[],"kind":8,"storage":0},{"id":6,"usr":6226918133611691738,"detailed_name":"int _bson_writer_t::b","short_name_offset":20,"short_name_size":1,"hover":"","comments":"","declarations":[],"spell":"29:11-29:12|0|2|2","extent":"29:4-29:12|0|2|0","type":1,"uses":[],"kind":8,"storage":0},{"id":7,"usr":14722406315164009046,"detailed_name":"int **buf","short_name_offset":6,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"61:28-61:31|0|3|2","extent":"61:18-61:31|0|3|0","type":1,"uses":[],"kind":253,"storage":1},{"id":8,"usr":15501531609613327128,"detailed_name":"int *buflen","short_name_offset":5,"short_name_size":6,"hover":"","comments":"","declarations":[],"spell":"62:26-62:32|0|3|2","extent":"62:18-62:32|0|3|0","type":1,"uses":[],"kind":253,"storage":1},{"id":9,"usr":17059257970105040760,"detailed_name":"int offset","short_name_offset":4,"short_name_size":6,"hover":"","comments":"","declarations":[],"spell":"63:25-63:31|0|3|2","extent":"63:18-63:31|0|3|0","type":1,"uses":[],"kind":253,"storage":1},{"id":10,"usr":3166046280798969739,"detailed_name":"int realloc_func","short_name_offset":4,"short_name_size":12,"hover":"","comments":"","declarations":[],"spell":"64:36-64:48|0|3|2","extent":"64:18-64:48|0|3|0","type":1,"uses":[],"kind":253,"storage":1},{"id":11,"usr":1046047703999143672,"detailed_name":"void *realloc_func_ctx","short_name_offset":6,"short_name_size":16,"hover":"","comments":"","declarations":[],"spell":"65:24-65:40|0|3|2","extent":"65:18-65:40|0|3|0","type":2,"uses":[],"kind":253,"storage":1},{"id":12,"usr":1399854081476983171,"detailed_name":"int *writer","short_name_offset":5,"short_name_size":6,"hover":"","comments":"","declarations":[],"spell":"100:37-100:43|1|3|2","extent":"100:22-100:43|1|3|0","type":1,"uses":[],"kind":253,"storage":1},{"id":13,"usr":1786742468855715194,"detailed_name":"int *writer","short_name_offset":5,"short_name_size":6,"hover":"","comments":"","declarations":[],"spell":"129:40-129:46|2|3|2","extent":"129:25-129:46|2|3|0","type":1,"uses":[],"kind":253,"storage":1},{"id":14,"usr":1255767929914887946,"detailed_name":"int *writer","short_name_offset":5,"short_name_size":6,"hover":"","comments":"","declarations":[],"spell":"159:35-159:41|3|3|2","extent":"159:20-159:41|3|3|0","type":1,"uses":[],"kind":253,"storage":1},{"id":15,"usr":2284564603464665672,"detailed_name":"int **bson","short_name_offset":6,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"160:29-160:33|3|3|2","extent":"160:20-160:33|3|3|0","type":1,"uses":[],"kind":253,"storage":1},{"id":16,"usr":16950123094254781068,"detailed_name":"int *writer","short_name_offset":5,"short_name_size":6,"hover":"","comments":"","declarations":[],"spell":"231:33-231:39|4|3|2","extent":"231:18-231:39|4|3|0","type":1,"uses":[],"kind":253,"storage":1},{"id":17,"usr":3973090714351442446,"detailed_name":"int *writer","short_name_offset":5,"short_name_size":6,"hover":"","comments":"","declarations":[],"spell":"262:38-262:44|5|3|2","extent":"262:23-262:44|5|3|0","type":1,"uses":[],"kind":253,"storage":1}]}