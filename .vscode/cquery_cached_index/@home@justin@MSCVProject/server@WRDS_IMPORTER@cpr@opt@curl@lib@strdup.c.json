16
{"last_modification_time":1548181616,"language":1,"import_file":"/home/justin/MSCVProject/server/WRDS_IMPORTER/cpr/opt/curl/lib/strdup.c","args_hash":10433645398913005206,"includes":[{"line":22,"resolved_path":"/home/justin/MSCVProject/server/WRDS_IMPORTER/cpr/opt/curl/lib/curl_setup.h"},{"line":26,"resolved_path":"/home/justin/MSCVProject/server/WRDS_IMPORTER/cpr/opt/curl/lib/strdup.h"},{"line":27,"resolved_path":"/home/justin/MSCVProject/server/WRDS_IMPORTER/cpr/opt/curl/lib/curl_memory.h"},{"line":30,"resolved_path":"/home/justin/MSCVProject/server/WRDS_IMPORTER/cpr/opt/curl/lib/memdebug.h"}],"dependencies":["/home/justin/MSCVProject/server/WRDS_IMPORTER/cpr/opt/curl/lib/curl_setup.h","/usr/include/stdio.h","/usr/include/x86_64-linux-gnu/bits/libc-header-start.h","/usr/include/features.h","/usr/include/x86_64-linux-gnu/sys/cdefs.h","/usr/include/x86_64-linux-gnu/gnu/stubs.h","/usr/include/x86_64-linux-gnu/bits/types.h","/usr/include/x86_64-linux-gnu/bits/types/__fpos_t.h","/usr/include/x86_64-linux-gnu/bits/types/__fpos64_t.h","/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h","/usr/local/lib/clang/7.0.0/include/stddef.h","/usr/local/lib/clang/7.0.0/include/stdarg.h","/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h","/usr/include/x86_64-linux-gnu/bits/types/__FILE.h","/usr/include/x86_64-linux-gnu/bits/types/FILE.h","/usr/include/x86_64-linux-gnu/bits/sys_errlist.h","/usr/include/stdc-predef.h","/usr/include/x86_64-linux-gnu/bits/wordsize.h","/usr/include/x86_64-linux-gnu/gnu/stubs-64.h","/usr/include/x86_64-linux-gnu/bits/typesizes.h","/usr/include/x86_64-linux-gnu/bits/stdio_lim.h"],"skipped_by_preprocessor":[],"types":[{"id":0,"usr":13,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[0,2],"uses":[]},{"id":1,"usr":5778908825573379114,"detailed_name":"size_t","short_name_offset":0,"short_name_size":6,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[1,4,7],"uses":["36:3-36:9|-1|1|4","44:15-44:21|-1|1|4","68:36-68:42|-1|1|4","93:35-93:41|-1|1|4"]},{"id":2,"usr":2,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[3,5,6,8],"uses":[]}],"funcs":[{"id":0,"usr":16905839848093166863,"detailed_name":"char *curlx_strdup(const char *str)","short_name_offset":6,"short_name_size":12,"kind":12,"storage":1,"hover":"","comments":"","declarations":[],"spell":"34:7-34:19|-1|1|2","extent":"34:1-55:2|-1|1|0","bases":[],"derived":[],"vars":[0,1,2],"uses":[],"callees":[]},{"id":1,"usr":6554012832801698307,"detailed_name":"void *Curl_memdup(const void *src, size_t length)","short_name_offset":6,"short_name_size":11,"kind":12,"storage":1,"hover":"","comments":"\n\nCurl_memdup(source, length)\n\nCopies the 'source' data to a newly allocated buffer (that is\nreturned). Copies 'length' bytes.\n\nReturns the new pointer or NULL on failure.","declarations":[],"spell":"68:7-68:18|-1|1|2","extent":"68:1-77:2|-1|1|0","bases":[],"derived":[],"vars":[3,4,5],"uses":[],"callees":[]},{"id":2,"usr":10124470011732075134,"detailed_name":"void *Curl_saferealloc(void *ptr, size_t size)","short_name_offset":6,"short_name_size":16,"kind":12,"storage":1,"hover":"","comments":"\n\nCurl_saferealloc(ptr, size)\n\nDoes a normal realloc(), but will free the data pointer if the realloc\nfails. If 'size' is zero, it will free the data and return a failure.\n\nThis convenience function is provided and used to help us avoid a common\nmistake pattern when we could pass in a zero, catch the NULL return and end\nup free'ing the memory twice.\n\nReturns the new pointer or NULL on failure.","declarations":[],"spell":"93:7-93:23|-1|1|2","extent":"93:1-100:2|-1|1|0","bases":[],"derived":[],"vars":[6,7,8],"uses":[],"callees":[]}],"vars":[{"id":0,"usr":11716543146980321456,"detailed_name":"const char *str","short_name_offset":12,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"34:32-34:35|0|3|2","extent":"34:20-34:35|0|3|0","type":0,"uses":["39:7-39:10|0|3|12","42:16-42:19|0|3|12","51:18-51:21|0|3|12"],"kind":253,"storage":1},{"id":1,"usr":6761023998403219010,"detailed_name":"size_t len","short_name_offset":7,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"36:10-36:13|0|3|2","extent":"36:3-36:13|0|3|0","type":1,"uses":["42:3-42:6|0|3|20","44:6-44:9|0|3|12","47:20-47:23|0|3|12","51:24-51:27|0|3|12"],"kind":13,"storage":1},{"id":2,"usr":2057873701158718277,"detailed_name":"char *newstr","short_name_offset":6,"short_name_size":6,"hover":"","comments":"","declarations":[],"spell":"37:9-37:15|0|3|2","extent":"37:3-37:15|0|3|0","type":0,"uses":["47:3-47:9|0|3|20","48:7-48:13|0|3|12","51:10-51:16|0|3|12","53:10-53:16|0|3|12"],"kind":13,"storage":1},{"id":3,"usr":64929988796684548,"detailed_name":"const void *src","short_name_offset":12,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"68:31-68:34|1|3|2","extent":"68:19-68:34|1|3|0","type":2,"uses":["74:18-74:21|1|3|12"],"kind":253,"storage":1},{"id":4,"usr":4133452556101692519,"detailed_name":"size_t length","short_name_offset":7,"short_name_size":6,"hover":"","comments":"","declarations":[],"spell":"68:43-68:49|1|3|2","extent":"68:36-68:49|1|3|0","type":1,"uses":["70:25-70:31|1|3|12","74:23-74:29|1|3|12"],"kind":253,"storage":1},{"id":5,"usr":13693165687850482575,"detailed_name":"void *buffer","short_name_offset":6,"short_name_size":6,"hover":"void *buffer = malloc(length)","comments":"","declarations":[],"spell":"70:9-70:15|1|3|2","extent":"70:3-70:32|1|3|0","type":2,"uses":["71:7-71:13|1|3|12","74:10-74:16|1|3|12","76:10-76:16|1|3|12"],"kind":13,"storage":1},{"id":6,"usr":7346132308411739457,"detailed_name":"void *ptr","short_name_offset":6,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"93:30-93:33|2|3|2","extent":"93:24-93:33|2|3|0","type":2,"uses":["95:25-95:28|2|3|12","98:10-98:13|2|3|12"],"kind":253,"storage":1},{"id":7,"usr":12212092726166515512,"detailed_name":"size_t size","short_name_offset":7,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"93:42-93:46|2|3|2","extent":"93:35-93:46|2|3|0","type":1,"uses":["95:30-95:34|2|3|12","96:6-96:10|2|3|12"],"kind":253,"storage":1},{"id":8,"usr":14366018295722161087,"detailed_name":"void *datap","short_name_offset":6,"short_name_size":5,"hover":"void *datap = realloc(ptr, size)","comments":"","declarations":[],"spell":"95:9-95:14|2|3|2","extent":"95:3-95:35|2|3|0","type":2,"uses":["96:15-96:20|2|3|12","99:10-99:15|2|3|12"],"kind":13,"storage":1},{"id":9,"usr":291038054068649371,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["40:20-40:24|-1|1|4","45:20-45:24|-1|1|4","49:20-49:24|-1|1|4","72:12-72:16|-1|1|4"],"kind":0,"storage":0}]}