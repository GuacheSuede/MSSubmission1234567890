16
{"last_modification_time":1548363167,"language":1,"import_file":"/home/justin/MSCVProject/database/mongo-c-driver-1.13.1/src/libbson/src/bson/bson-string.c","args_hash":10433645398913005206,"includes":[{"line":17,"resolved_path":"/usr/local/lib/clang/7.0.0/include/limits.h"},{"line":18,"resolved_path":"/usr/local/lib/clang/7.0.0/include/stdarg.h"},{"line":28,"resolved_path":"/usr/include/string.h"}],"dependencies":["/usr/local/lib/clang/7.0.0/include/limits.h","/usr/include/limits.h","/usr/include/x86_64-linux-gnu/bits/libc-header-start.h","/usr/include/features.h","/usr/include/x86_64-linux-gnu/sys/cdefs.h","/usr/include/x86_64-linux-gnu/gnu/stubs.h","/usr/include/x86_64-linux-gnu/bits/posix1_lim.h","/usr/include/x86_64-linux-gnu/bits/local_lim.h","/usr/local/lib/clang/7.0.0/include/stdarg.h","/usr/include/stdc-predef.h","/usr/include/x86_64-linux-gnu/bits/wordsize.h","/usr/include/x86_64-linux-gnu/gnu/stubs-64.h","/usr/include/linux/limits.h","/usr/include/x86_64-linux-gnu/bits/posix2_lim.h"],"skipped_by_preprocessor":["26:1-28:6","525:1-527:6","569:1-571:6","606:1-623:6","824:1-826:6"],"types":[{"id":0,"usr":13,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[0,3,5,7,8,11,13,15,18,20,21,24,27,29,30,32,33,35,37,38,40,42,45,47,50,51,53,54,55,56,57],"uses":[]},{"id":1,"usr":17,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[1,2,4,6,9,10,12,16,17,25,26,31,34,36,39,41,44,46,48,52],"uses":[]},{"id":2,"usr":6839408168893055231,"detailed_name":"va_list","short_name_offset":0,"short_name_size":7,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[14,22,23,28,43,49],"uses":["262:4-262:11|-1|1|4","379:22-379:29|-1|1|4","381:4-381:11|-1|1|4","431:4-431:11|-1|1|4","604:17-604:24|-1|1|4","668:4-668:11|-1|1|4"]},{"id":3,"usr":18,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[19],"uses":[]}],"funcs":[{"id":0,"usr":2021785799701426732,"detailed_name":"int *bson_string_new(const char *str)","short_name_offset":5,"short_name_size":15,"kind":12,"storage":1,"hover":"","comments":"\n--------------------------------------------------------------------------\n\n bson_string_new --\n\n       Create a new bson_string_t.\n\n       bson_string_t is a power-of-2 allocation growing string. Every\n       time data is appended the next power of two size is chosen for\n       the allocation. Pretty standard stuff.\n\n       It is UTF-8 aware through the use of bson_string_append_unichar().\n       The proper UTF-8 character sequence will be used.\n\n Parameters:\n       @str: a string to copy or NULL.\n\n Returns:\n       A newly allocated bson_string_t that should be freed with\n       bson_string_free().\n\n Side effects:\n       None.\n\n--------------------------------------------------------------------------","declarations":[],"spell":"60:1-60:16|-1|1|2","extent":"59:1-84:2|-1|1|0","bases":[],"derived":[],"vars":[0],"uses":[],"callees":[]},{"id":1,"usr":549339697588014024,"detailed_name":"char *bson_string_free(int *string, int free_segment)","short_name_offset":6,"short_name_size":16,"kind":12,"storage":1,"hover":"","comments":"\n--------------------------------------------------------------------------\n\n bson_string_free --\n\n       Free the bson_string_t @string and related allocations.\n\n       If @free_segment is false, then the strings buffer will be\n       returned and is not freed. Otherwise, NULL is returned.\n\n Returns:\n       The string->str if free_segment is false.\n       Otherwise NULL.\n\n Side effects:\n       None.\n\n--------------------------------------------------------------------------","declarations":[],"spell":"108:1-108:17|-1|1|2","extent":"107:1-124:2|-1|1|0","bases":[],"derived":[],"vars":[1,2,3],"uses":[],"callees":[]},{"id":2,"usr":8074447886121226588,"detailed_name":"void bson_string_append(int *string, const char *str)","short_name_offset":5,"short_name_size":18,"kind":12,"storage":1,"hover":"","comments":"\n--------------------------------------------------------------------------\n\n bson_string_append --\n\n       Append the UTF-8 string @str to @string.\n\n Returns:\n       None.\n\n Side effects:\n       None.\n\n--------------------------------------------------------------------------","declarations":[],"spell":"144:1-144:19|-1|1|2","extent":"143:1-166:2|-1|1|0","bases":[],"derived":[],"vars":[4,5],"uses":[],"callees":[]},{"id":3,"usr":4850255738830792696,"detailed_name":"void bson_string_append_c(int *string, char c)","short_name_offset":5,"short_name_size":20,"kind":12,"storage":1,"hover":"","comments":"\n--------------------------------------------------------------------------\n\n bson_string_append_c --\n\n       Append the ASCII character @c to @string.\n\n       Do not use this if you are working with UTF-8 sequences,\n       use bson_string_append_unichar().\n\n Returns:\n       None.\n\n Side effects:\n       None.\n\n--------------------------------------------------------------------------","declarations":[],"spell":"189:1-189:21|-1|1|2","extent":"188:1-205:2|-1|1|0","bases":[],"derived":[],"vars":[6,7,8],"uses":[],"callees":[]},{"id":4,"usr":10597265549954058117,"detailed_name":"void bson_string_append_unichar(int *string, int unichar)","short_name_offset":5,"short_name_size":26,"kind":12,"storage":1,"hover":"","comments":"\n--------------------------------------------------------------------------\n\n bson_string_append_unichar --\n\n       Append the bson_unichar_t @unichar to the string @string.\n\n Returns:\n       None.\n\n Side effects:\n       None.\n\n--------------------------------------------------------------------------","declarations":[],"spell":"225:1-225:27|-1|1|2","extent":"224:1-240:2|-1|1|0","bases":[],"derived":[],"vars":[9,10,11],"uses":[],"callees":[]},{"id":5,"usr":10378931001530700496,"detailed_name":"void bson_string_append_printf(int *string, const char *format, ...)","short_name_offset":5,"short_name_size":25,"kind":12,"storage":1,"hover":"","comments":"\n--------------------------------------------------------------------------\n\n bson_string_append_printf --\n\n       Format a string according to @format and append it to @string.\n\n Returns:\n       None.\n\n Side effects:\n       None.\n\n--------------------------------------------------------------------------","declarations":[],"spell":"260:1-260:26|-1|1|2","extent":"259:1-273:2|-1|1|0","bases":[],"derived":[],"vars":[12,13,14,15],"uses":[],"callees":[]},{"id":6,"usr":9426214587805629410,"detailed_name":"void bson_string_truncate(int *string, int len)","short_name_offset":5,"short_name_size":20,"kind":12,"storage":1,"hover":"","comments":"\n--------------------------------------------------------------------------\n\n bson_string_truncate --\n\n       Truncate the string @string to @len bytes.\n\n       The underlying memory will be released via realloc() down to\n       the minimum required size specified by @len.\n\n Returns:\n       None.\n\n Side effects:\n       None.\n\n--------------------------------------------------------------------------","declarations":[],"spell":"296:1-296:21|-1|1|2","extent":"295:1-319:2|-1|1|0","bases":[],"derived":[],"vars":[16,17],"uses":[],"callees":[]},{"id":7,"usr":18000946355494535329,"detailed_name":"char *bson_strdup(const char *str)","short_name_offset":6,"short_name_size":11,"kind":12,"storage":1,"hover":"","comments":"\n--------------------------------------------------------------------------\n\n bson_strdup --\n\n       Portable strdup().\n\n Returns:\n       A newly allocated string that should be freed with bson_free().\n\n Side effects:\n       None.\n\n--------------------------------------------------------------------------","declarations":[],"spell":"339:1-339:12|-1|1|2","extent":"338:1-358:2|-1|1|0","bases":[],"derived":[],"vars":[18,19,20],"uses":[],"callees":[]},{"id":8,"usr":13810468992405272132,"detailed_name":"char *bson_strdupv_printf(const char *format, va_list args)","short_name_offset":6,"short_name_size":19,"kind":12,"storage":1,"hover":"","comments":"\n--------------------------------------------------------------------------\n\n bson_strdupv_printf --\n\n       Like bson_strdup_printf() but takes a va_list.\n\n Returns:\n       A newly allocated string that should be freed with bson_free().\n\n Side effects:\n       None.\n\n--------------------------------------------------------------------------","declarations":[],"spell":"378:1-378:20|-1|1|2","extent":"377:1-407:2|-1|1|0","bases":[],"derived":[],"vars":[21,22,23,24,25,26],"uses":[],"callees":[]},{"id":9,"usr":12091168700473713457,"detailed_name":"char *bson_strdup_printf(const char *format, ...)","short_name_offset":6,"short_name_size":18,"kind":12,"storage":1,"hover":"","comments":"\n--------------------------------------------------------------------------\n\n bson_strdup_printf --\n\n       Convenience function that formats a string according to @format\n       and returns a copy of it.\n\n Returns:\n       A newly created string that should be freed with bson_free().\n\n Side effects:\n       None.\n\n--------------------------------------------------------------------------","declarations":[],"spell":"428:1-428:19|-1|1|2","extent":"427:1-441:2|-1|1|0","bases":[],"derived":[],"vars":[27,28,29],"uses":[],"callees":[]},{"id":10,"usr":7558709895570880458,"detailed_name":"char *bson_strndup(const char *str, int n_bytes)","short_name_offset":6,"short_name_size":12,"kind":12,"storage":1,"hover":"","comments":"\n--------------------------------------------------------------------------\n\n bson_strndup --\n\n       A portable strndup().\n\n Returns:\n       A newly allocated string that should be freed with bson_free().\n\n Side effects:\n       None.\n\n--------------------------------------------------------------------------","declarations":[],"spell":"461:1-461:13|-1|1|2","extent":"460:1-472:2|-1|1|0","bases":[],"derived":[],"vars":[30,31,32],"uses":[],"callees":[]},{"id":11,"usr":13302611186250468779,"detailed_name":"void bson_strfreev(char **str)","short_name_offset":5,"short_name_size":13,"kind":12,"storage":1,"hover":"","comments":"\n--------------------------------------------------------------------------\n\n bson_strfreev --\n\n       Frees each string in a NULL terminated array of strings.\n       This also frees the underlying array.\n\n Returns:\n       None.\n\n Side effects:\n       None.\n\n--------------------------------------------------------------------------","declarations":[],"spell":"493:1-493:14|-1|1|2","extent":"492:1-502:2|-1|1|0","bases":[],"derived":[],"vars":[33,34],"uses":[],"callees":[]},{"id":12,"usr":14982377348682425597,"detailed_name":"int bson_strnlen(const char *s, int maxlen)","short_name_offset":4,"short_name_size":12,"kind":12,"storage":1,"hover":"","comments":"\n--------------------------------------------------------------------------\n\n bson_strnlen --\n\n       A portable strnlen().\n\n Returns:\n       The length of @s up to @maxlen.\n\n Side effects:\n       None.\n\n--------------------------------------------------------------------------","declarations":[],"spell":"522:1-522:13|-1|1|2","extent":"521:1-538:2|-1|1|0","bases":[],"derived":[],"vars":[35,36],"uses":[],"callees":[]},{"id":13,"usr":6806521833683221310,"detailed_name":"void bson_strncpy(char *dst, const char *src, int size)","short_name_offset":5,"short_name_size":12,"kind":12,"storage":1,"hover":"","comments":"\n--------------------------------------------------------------------------\n\n bson_strncpy --\n\n       A portable strncpy.\n\n       Copies @src into @dst, which must be @size bytes or larger.\n       The result is guaranteed to be \\0 terminated.\n\n Returns:\n       None.\n\n Side effects:\n       None.\n\n--------------------------------------------------------------------------","declarations":[],"spell":"561:1-561:13|-1|1|2","extent":"560:1-575:2|-1|1|0","bases":[],"derived":[],"vars":[37,38,39],"uses":[],"callees":[]},{"id":14,"usr":10161231903360064449,"detailed_name":"int bson_vsnprintf(char *str, int size, const char *format, va_list ap)","short_name_offset":4,"short_name_size":14,"kind":12,"storage":1,"hover":"","comments":"\n--------------------------------------------------------------------------\n\n bson_vsnprintf --\n\n       A portable vsnprintf.\n\n       If more than @size bytes are required (exluding the null byte),\n       then @size bytes will be written to @string and the return value\n       is the number of bytes required.\n\n       This function will always return a NULL terminated string.\n\n Returns:\n       The number of bytes required for @format excluding the null byte.\n\n Side effects:\n       @str is initialized with the formatted string.\n\n--------------------------------------------------------------------------","declarations":[],"spell":"601:1-601:15|-1|1|2","extent":"600:1-636:2|-1|1|0","bases":[],"derived":[],"vars":[40,41,42,43,44],"uses":[],"callees":[]},{"id":15,"usr":2260850979709385686,"detailed_name":"int bson_snprintf(char *str, int size, const char *format, ...)","short_name_offset":4,"short_name_size":13,"kind":12,"storage":1,"hover":"","comments":"\n--------------------------------------------------------------------------\n\n bson_snprintf --\n\n       A portable snprintf.\n\n       If @format requires more than @size bytes, then @size bytes are\n       written and the result is the number of bytes required (excluding\n       the null byte).\n\n       This function will always return a NULL terminated string.\n\n Returns:\n       The number of bytes required for @format.\n\n Side effects:\n       @str is initialized.\n\n--------------------------------------------------------------------------","declarations":[],"spell":"662:1-662:14|-1|1|2","extent":"661:1-677:2|-1|1|0","bases":[],"derived":[],"vars":[45,46,47,48,49],"uses":[],"callees":[]},{"id":16,"usr":14817354325427702798,"detailed_name":"int bson_ascii_strtoll(const char *s, char **e, int base)","short_name_offset":4,"short_name_size":18,"kind":12,"storage":1,"hover":"","comments":"\n--------------------------------------------------------------------------\n\n bson_ascii_strtoll --\n\n       A portable strtoll.\n\n       Convert a string to a 64-bit signed integer according to the given\n       @base, which must be 16, 10, or 8. Leading whitespace will be ignored.\n\n       If base is 0 is passed in, the base is inferred from the string's\n       leading characters. Base-16 numbers start with \"0x\" or \"0X\", base-8\n       numbers start with \"0\", base-10 numbers start with a digit from 1 to 9.\n\n       If @e is not NULL, it will be assigned the address of the first invalid\n       character of @s, or its null terminating byte if the entire string was\n       valid.\n\n       If an invalid value is encountered, errno will be set to EINVAL and\n       zero will be returned. If the number is out of range, errno is set to\n       ERANGE and LLONG_MAX or LLONG_MIN is returned.\n\n Returns:\n       The result of the conversion.\n\n Side effects:\n       errno will be set on error.\n\n--------------------------------------------------------------------------","declarations":[],"spell":"712:1-712:19|-1|1|2","extent":"711:1-818:2|-1|1|0","bases":[],"derived":[],"vars":[50,51,52,53,54,55],"uses":[],"callees":[]},{"id":17,"usr":11622290345126216195,"detailed_name":"int bson_strcasecmp(const char *s1, const char *s2)","short_name_offset":4,"short_name_size":15,"kind":12,"storage":1,"hover":"","comments":"","declarations":[],"spell":"822:1-822:16|-1|1|2","extent":"821:1-829:2|-1|1|0","bases":[],"derived":[],"vars":[56,57],"uses":[],"callees":[]}],"vars":[{"id":0,"usr":16756910668504775082,"detailed_name":"const char *str","short_name_offset":12,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"60:30-60:33|0|3|2","extent":"60:18-60:33|0|3|0","type":0,"uses":["76:8-76:11|0|3|12"],"kind":253,"storage":1},{"id":1,"usr":6488555382751629658,"detailed_name":"int *string","short_name_offset":5,"short_name_size":6,"hover":"","comments":"","declarations":[],"spell":"108:34-108:40|1|3|2","extent":"108:19-108:40|1|3|0","type":1,"uses":[],"kind":253,"storage":1},{"id":2,"usr":5382542864632391052,"detailed_name":"int free_segment","short_name_offset":4,"short_name_size":12,"hover":"","comments":"","declarations":[],"spell":"109:24-109:36|1|3|2","extent":"109:19-109:36|1|3|0","type":1,"uses":[],"kind":253,"storage":1},{"id":3,"usr":8255595917847660613,"detailed_name":"char *ret","short_name_offset":6,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"111:10-111:13|1|3|2","extent":"111:4-111:13|1|3|0","type":0,"uses":["123:11-123:14|1|3|12"],"kind":13,"storage":1},{"id":4,"usr":3581969110186157085,"detailed_name":"int *string","short_name_offset":5,"short_name_size":6,"hover":"","comments":"","declarations":[],"spell":"144:36-144:42|2|3|2","extent":"144:21-144:42|2|3|0","type":1,"uses":[],"kind":253,"storage":1},{"id":5,"usr":11065086033634575964,"detailed_name":"const char *str","short_name_offset":12,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"145:33-145:36|2|3|2","extent":"145:21-145:36|2|3|0","type":0,"uses":["150:17-150:20|2|3|12"],"kind":253,"storage":1},{"id":6,"usr":371050226384075641,"detailed_name":"int *string","short_name_offset":5,"short_name_size":6,"hover":"","comments":"","declarations":[],"spell":"189:38-189:44|3|3|2","extent":"189:23-189:44|3|3|0","type":1,"uses":[],"kind":253,"storage":1},{"id":7,"usr":1880541265186861896,"detailed_name":"char c","short_name_offset":5,"short_name_size":1,"hover":"","comments":"","declarations":[],"spell":"190:28-190:29|3|3|2","extent":"190:23-190:29|3|3|0","type":0,"uses":["197:15-197:16|3|3|12"],"kind":253,"storage":1},{"id":8,"usr":9019051264387857091,"detailed_name":"char [2] cc","short_name_offset":9,"short_name_size":2,"hover":"","comments":"","declarations":[],"spell":"192:9-192:11|3|3|2","extent":"192:4-192:14|3|3|0","type":0,"uses":["197:7-197:9|3|3|4","198:7-198:9|3|3|4"],"kind":13,"storage":1},{"id":9,"usr":868528101213031782,"detailed_name":"int *string","short_name_offset":5,"short_name_size":6,"hover":"","comments":"","declarations":[],"spell":"225:44-225:50|4|3|2","extent":"225:29-225:50|4|3|0","type":1,"uses":[],"kind":253,"storage":1},{"id":10,"usr":4007233616960729829,"detailed_name":"int unichar","short_name_offset":4,"short_name_size":7,"hover":"","comments":"","declarations":[],"spell":"226:44-226:51|4|3|2","extent":"226:29-226:51|4|3|0","type":1,"uses":[],"kind":253,"storage":1},{"id":11,"usr":6074719901077611995,"detailed_name":"char [8] str","short_name_offset":9,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"229:9-229:12|4|3|2","extent":"229:4-229:15|4|3|0","type":0,"uses":[],"kind":13,"storage":1},{"id":12,"usr":17685987969095668140,"detailed_name":"int *string","short_name_offset":5,"short_name_size":6,"hover":"","comments":"","declarations":[],"spell":"260:43-260:49|5|3|2","extent":"260:28-260:49|5|3|0","type":1,"uses":[],"kind":253,"storage":1},{"id":13,"usr":7541805405033820853,"detailed_name":"const char *format","short_name_offset":12,"short_name_size":6,"hover":"","comments":"","declarations":[],"spell":"260:63-260:69|5|3|2","extent":"260:51-260:69|5|3|0","type":0,"uses":["266:17-266:23|5|3|12","268:20-268:26|5|3|4","269:31-269:37|5|3|12"],"kind":253,"storage":1},{"id":14,"usr":9393994621427251363,"detailed_name":"va_list args","short_name_offset":8,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"262:12-262:16|5|3|2","extent":"262:4-262:16|5|3|0","type":2,"uses":["268:14-268:18|5|3|4","269:39-269:43|5|3|4","270:12-270:16|5|3|4"],"kind":13,"storage":1},{"id":15,"usr":1561362460791349124,"detailed_name":"char *ret","short_name_offset":6,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"263:10-263:13|5|3|2","extent":"263:4-263:13|5|3|0","type":0,"uses":["269:4-269:7|5|3|20","272:15-272:18|5|3|12"],"kind":13,"storage":1},{"id":16,"usr":6045046438544402281,"detailed_name":"int *string","short_name_offset":5,"short_name_size":6,"hover":"","comments":"","declarations":[],"spell":"296:38-296:44|6|3|2","extent":"296:23-296:44|6|3|0","type":1,"uses":[],"kind":253,"storage":1},{"id":17,"usr":17230359410853069615,"detailed_name":"int len","short_name_offset":4,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"297:32-297:35|6|3|2","extent":"297:23-297:35|6|3|0","type":1,"uses":[],"kind":253,"storage":1},{"id":18,"usr":731415458768436313,"detailed_name":"const char *str","short_name_offset":12,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"339:26-339:29|7|3|2","extent":"339:14-339:29|7|3|0","type":0,"uses":["344:9-344:12|7|3|12","348:25-348:28|7|3|12","355:17-355:20|7|3|12"],"kind":253,"storage":1},{"id":19,"usr":17274633945937280769,"detailed_name":"long len","short_name_offset":5,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"341:9-341:12|7|3|2","extent":"341:4-341:12|7|3|0","type":3,"uses":["348:4-348:7|7|3|20","349:23-349:26|7|3|12","355:22-355:25|7|3|12"],"kind":13,"storage":1},{"id":20,"usr":9890347510734452886,"detailed_name":"char *out","short_name_offset":6,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"342:10-342:13|7|3|2","extent":"342:4-342:13|7|3|0","type":0,"uses":["349:4-349:7|7|3|20","351:9-351:12|7|3|12","355:12-355:15|7|3|12","357:11-357:14|7|3|12"],"kind":13,"storage":1},{"id":21,"usr":15929813754690853509,"detailed_name":"const char *format","short_name_offset":12,"short_name_size":6,"hover":"","comments":"","declarations":[],"spell":"378:34-378:40|8|3|2","extent":"378:22-378:40|8|3|0","type":0,"uses":["386:17-386:23|8|3|12"],"kind":253,"storage":1},{"id":22,"usr":2461681684062405803,"detailed_name":"va_list args","short_name_offset":8,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"379:30-379:34|8|3|2","extent":"379:22-379:34|8|3|0","type":2,"uses":[],"kind":253,"storage":1},{"id":23,"usr":5706234124974832798,"detailed_name":"va_list my_args","short_name_offset":8,"short_name_size":7,"hover":"","comments":"","declarations":[],"spell":"381:12-381:19|8|3|2","extent":"381:4-381:19|8|3|0","type":2,"uses":[],"kind":13,"storage":1},{"id":24,"usr":5349094539144974238,"detailed_name":"char *buf","short_name_offset":6,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"382:10-382:13|8|3|2","extent":"382:4-382:13|8|3|0","type":0,"uses":["388:4-388:7|8|3|20"],"kind":13,"storage":1},{"id":25,"usr":18340789565280958032,"detailed_name":"int len","short_name_offset":4,"short_name_size":3,"hover":"int len = 32","comments":"","declarations":[],"spell":"383:8-383:11|8|3|2","extent":"383:4-383:16|8|3|0","type":1,"uses":["388:24-388:27|8|3|12"],"kind":13,"storage":1},{"id":26,"usr":10969706436884914838,"detailed_name":"int n","short_name_offset":4,"short_name_size":1,"hover":"","comments":"","declarations":[],"spell":"384:8-384:9|8|3|2","extent":"384:4-384:9|8|3|0","type":1,"uses":[],"kind":13,"storage":1},{"id":27,"usr":7624060766691739609,"detailed_name":"const char *format","short_name_offset":12,"short_name_size":6,"hover":"","comments":"","declarations":[],"spell":"428:33-428:39|9|3|2","extent":"428:21-428:39|9|3|0","type":0,"uses":["434:17-434:23|9|3|12","436:20-436:26|9|3|4"],"kind":253,"storage":1},{"id":28,"usr":3550726062743007744,"detailed_name":"va_list args","short_name_offset":8,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"431:12-431:16|9|3|2","extent":"431:4-431:16|9|3|0","type":2,"uses":["436:14-436:18|9|3|4","438:12-438:16|9|3|4"],"kind":13,"storage":1},{"id":29,"usr":8564296737791388741,"detailed_name":"char *ret","short_name_offset":6,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"432:10-432:13|9|3|2","extent":"432:4-432:13|9|3|0","type":0,"uses":["440:11-440:14|9|3|12"],"kind":13,"storage":1},{"id":30,"usr":8795824263883404158,"detailed_name":"const char *str","short_name_offset":12,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"461:27-461:30|10|3|2","extent":"461:15-461:30|10|3|0","type":0,"uses":["466:17-466:20|10|3|12"],"kind":253,"storage":1},{"id":31,"usr":14883738959170492979,"detailed_name":"int n_bytes","short_name_offset":4,"short_name_size":7,"hover":"","comments":"","declarations":[],"spell":"462:22-462:29|10|3|2","extent":"462:15-462:29|10|3|0","type":1,"uses":[],"kind":253,"storage":1},{"id":32,"usr":4944821443350540713,"detailed_name":"char *ret","short_name_offset":6,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"464:10-464:13|10|3|2","extent":"464:4-464:13|10|3|0","type":0,"uses":["471:11-471:14|10|3|12"],"kind":13,"storage":1},{"id":33,"usr":223197220792843165,"detailed_name":"char **str","short_name_offset":7,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"493:23-493:26|11|3|2","extent":"493:16-493:26|11|3|0","type":0,"uses":["497:8-497:11|11|3|12","498:19-498:22|11|3|12","499:21-499:24|11|3|12","500:18-500:21|11|3|12"],"kind":253,"storage":1},{"id":34,"usr":5614924673000352485,"detailed_name":"int i","short_name_offset":4,"short_name_size":1,"hover":"","comments":"","declarations":[],"spell":"495:8-495:9|11|3|2","extent":"495:4-495:9|11|3|0","type":1,"uses":["498:12-498:13|11|3|20","498:23-498:24|11|3|12","498:27-498:28|11|3|28","499:25-499:26|11|3|12"],"kind":13,"storage":1},{"id":35,"usr":15430774055763393381,"detailed_name":"const char *s","short_name_offset":12,"short_name_size":1,"hover":"","comments":"","declarations":[],"spell":"522:27-522:28|12|3|2","extent":"522:15-522:28|12|3|0","type":0,"uses":[],"kind":253,"storage":1},{"id":36,"usr":3823834284053116202,"detailed_name":"int maxlen","short_name_offset":4,"short_name_size":6,"hover":"","comments":"","declarations":[],"spell":"523:22-523:28|12|3|2","extent":"523:15-523:28|12|3|0","type":1,"uses":[],"kind":253,"storage":1},{"id":37,"usr":9132838719728179700,"detailed_name":"char *dst","short_name_offset":6,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"561:21-561:24|13|3|2","extent":"561:15-561:24|13|3|0","type":0,"uses":[],"kind":253,"storage":1},{"id":38,"usr":1240060647429408706,"detailed_name":"const char *src","short_name_offset":12,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"562:27-562:30|13|3|2","extent":"562:15-562:30|13|3|0","type":0,"uses":[],"kind":253,"storage":1},{"id":39,"usr":9679123104862610584,"detailed_name":"int size","short_name_offset":4,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"563:22-563:26|13|3|2","extent":"563:15-563:26|13|3|0","type":1,"uses":[],"kind":253,"storage":1},{"id":40,"usr":16600311751850488859,"detailed_name":"char *str","short_name_offset":6,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"601:23-601:26|14|3|2","extent":"601:17-601:26|14|3|0","type":0,"uses":["626:17-626:20|14|3|12"],"kind":253,"storage":1},{"id":41,"usr":8115154931368669884,"detailed_name":"int size","short_name_offset":4,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"602:24-602:28|14|3|2","extent":"602:17-602:28|14|3|0","type":1,"uses":[],"kind":253,"storage":1},{"id":42,"usr":7542633911480624420,"detailed_name":"const char *format","short_name_offset":12,"short_name_size":6,"hover":"","comments":"","declarations":[],"spell":"603:29-603:35|14|3|2","extent":"603:17-603:35|14|3|0","type":0,"uses":[],"kind":253,"storage":1},{"id":43,"usr":442824799257538276,"detailed_name":"va_list ap","short_name_offset":8,"short_name_size":2,"hover":"","comments":"","declarations":[],"spell":"604:25-604:27|14|3|2","extent":"604:17-604:27|14|3|0","type":2,"uses":[],"kind":253,"storage":1},{"id":44,"usr":18207559329729634069,"detailed_name":"int r","short_name_offset":4,"short_name_size":1,"hover":"","comments":"","declarations":[],"spell":"624:8-624:9|14|3|2","extent":"624:4-624:9|14|3|0","type":1,"uses":["634:11-634:12|14|3|12"],"kind":13,"storage":1},{"id":45,"usr":14914005223326035020,"detailed_name":"char *str","short_name_offset":6,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"662:22-662:25|15|3|2","extent":"662:16-662:25|15|3|0","type":0,"uses":["670:17-670:20|15|3|12"],"kind":253,"storage":1},{"id":46,"usr":12910220621058405621,"detailed_name":"int size","short_name_offset":4,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"663:23-663:27|15|3|2","extent":"663:16-663:27|15|3|0","type":1,"uses":[],"kind":253,"storage":1},{"id":47,"usr":7663329972757244798,"detailed_name":"const char *format","short_name_offset":12,"short_name_size":6,"hover":"","comments":"","declarations":[],"spell":"664:28-664:34|15|3|2","extent":"664:16-664:34|15|3|0","type":0,"uses":["672:18-672:24|15|3|4"],"kind":253,"storage":1},{"id":48,"usr":7053449523450099647,"detailed_name":"int r","short_name_offset":4,"short_name_size":1,"hover":"","comments":"","declarations":[],"spell":"667:8-667:9|15|3|2","extent":"667:4-667:9|15|3|0","type":1,"uses":["676:11-676:12|15|3|12"],"kind":13,"storage":1},{"id":49,"usr":13171100406366410290,"detailed_name":"va_list ap","short_name_offset":8,"short_name_size":2,"hover":"","comments":"","declarations":[],"spell":"668:12-668:14|15|3|2","extent":"668:4-668:14|15|3|0","type":2,"uses":["672:14-672:16|15|3|4","674:12-674:14|15|3|4"],"kind":13,"storage":1},{"id":50,"usr":8863274052919762248,"detailed_name":"const char *s","short_name_offset":12,"short_name_size":1,"hover":"","comments":"","declarations":[],"spell":"712:33-712:34|16|3|2","extent":"712:21-712:34|16|3|0","type":0,"uses":["714:25-714:26|16|3|12","724:9-724:10|16|3|12"],"kind":253,"storage":1},{"id":51,"usr":15791314586971997449,"detailed_name":"char **e","short_name_offset":7,"short_name_size":1,"hover":"","comments":"","declarations":[],"spell":"712:43-712:44|16|3|2","extent":"712:36-712:44|16|3|0","type":0,"uses":["814:8-814:9|16|3|12"],"kind":253,"storage":1},{"id":52,"usr":11707410639558214138,"detailed_name":"int base","short_name_offset":4,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"712:50-712:54|16|3|2","extent":"712:46-712:54|16|3|0","type":1,"uses":["746:9-746:13|16|3|12","746:22-746:26|16|3|12","750:7-750:11|16|3|20","753:8-753:12|16|3|12","754:7-754:11|16|3|20","785:16-785:20|16|3|12"],"kind":253,"storage":1},{"id":53,"usr":12310758161991317431,"detailed_name":"char *tok","short_name_offset":6,"short_name_size":3,"hover":"char *tok = (char *) s","comments":"","declarations":[],"spell":"714:10-714:13|16|3|2","extent":"714:4-714:26|16|3|0","type":0,"uses":["729:9-729:12|16|3|12","732:14-732:17|16|3|28","737:14-737:17|16|3|28","739:14-739:17|16|3|28","747:9-747:12|16|3|12","747:26-747:29|16|3|12","748:7-748:10|16|3|4","749:12-749:15|16|3|12","773:19-773:22|16|3|12","775:17-775:20|16|3|12","809:7-809:10|16|3|28","814:12-814:15|16|3|12"],"kind":13,"storage":1},{"id":54,"usr":4909678228865580558,"detailed_name":"char *digits_start","short_name_offset":6,"short_name_size":12,"hover":"","comments":"","declarations":[],"spell":"715:10-715:22|16|3|2","extent":"715:4-715:22|16|3|0","type":0,"uses":["773:4-773:16|16|3|20"],"kind":13,"storage":1},{"id":55,"usr":9894635999645885114,"detailed_name":"char c","short_name_offset":5,"short_name_size":1,"hover":"","comments":"","declarations":[],"spell":"716:9-716:10|16|3|2","extent":"716:4-716:10|16|3|0","type":0,"uses":["729:4-729:5|16|3|20","731:20-731:21|16|3|12","732:7-732:8|16|3|20","735:8-735:9|16|3|12","737:7-737:8|16|3|20","738:15-738:16|16|3|12","739:7-739:8|16|3|20","740:25-740:26|16|3|12","746:37-746:38|16|3|12","749:7-749:8|16|3|20","754:14-754:15|16|3|12","775:12-775:13|16|3|20","776:20-776:21|16|3|12","777:10-777:11|16|3|4","778:27-778:28|16|3|12","779:10-779:11|16|3|4","779:24-779:25|16|3|12","785:11-785:12|16|3|12"],"kind":13,"storage":1},{"id":56,"usr":8015350161151862713,"detailed_name":"const char *s1","short_name_offset":12,"short_name_size":2,"hover":"","comments":"","declarations":[],"spell":"822:30-822:32|17|3|2","extent":"822:18-822:32|17|3|0","type":0,"uses":["827:23-827:25|17|3|12"],"kind":253,"storage":1},{"id":57,"usr":861202945448953505,"detailed_name":"const char *s2","short_name_offset":12,"short_name_size":2,"hover":"","comments":"","declarations":[],"spell":"822:46-822:48|17|3|2","extent":"822:34-822:48|17|3|0","type":0,"uses":["827:27-827:29|17|3|12"],"kind":253,"storage":1},{"id":58,"usr":11881266242369059690,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["268:4-268:12|-1|1|4","436:4-436:12|-1|1|4","672:4-672:12|-1|1|4"],"kind":0,"storage":0},{"id":59,"usr":807958141861893468,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["270:4-270:10|-1|1|4","393:7-393:13|-1|1|4","438:4-438:10|-1|1|4","674:4-674:10|-1|1|4"],"kind":0,"storage":0},{"id":60,"usr":7338245540856054797,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["302:23-302:30|-1|1|4"],"kind":0,"storage":0},{"id":61,"usr":10234439192634971130,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["391:7-391:14|-1|1|4"],"kind":0,"storage":0}]}