16
{"last_modification_time":1548363167,"language":1,"import_file":"/home/justin/MSCVProject/database/mongo-c-driver-1.13.1/src/libmongoc/src/mongoc/mongoc-buffer.c","args_hash":10433645398913005206,"includes":[{"line":18,"resolved_path":"/usr/local/lib/clang/7.0.0/include/stdarg.h"}],"dependencies":["/usr/local/lib/clang/7.0.0/include/stdarg.h"],"skipped_by_preprocessor":[],"types":[{"id":0,"usr":17,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24],"uses":[]},{"id":1,"usr":2,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[4],"uses":[]}],"funcs":[{"id":0,"usr":2011346114734445911,"detailed_name":"void _mongoc_buffer_init(int *buffer, int *buf, int buflen, int realloc_func, void *realloc_data)","short_name_offset":5,"short_name_size":19,"kind":12,"storage":1,"hover":"","comments":"\n_mongoc_buffer_init:\n@buffer: A mongoc_buffer_t to initialize.\n@buf: A data buffer to attach to @buffer.\n@buflen: The size of @buflen.\n@realloc_func: A function to resize @buf.\n\nInitializes @buffer for use. If additional space is needed by @buffer, then\n@realloc_func will be called to resize @buf.\n\n@buffer takes ownership of @buf and will realloc it to zero bytes when\ncleaning up the data structure.","declarations":[],"spell":"52:1-52:20|-1|1|2","extent":"51:1-80:2|-1|1|0","bases":[],"derived":[],"vars":[0,1,2,3,4],"uses":[],"callees":[]},{"id":1,"usr":11832957361814680293,"detailed_name":"void _mongoc_buffer_destroy(int *buffer)","short_name_offset":5,"short_name_size":22,"kind":12,"storage":1,"hover":"","comments":"\n_mongoc_buffer_destroy:\n@buffer: A mongoc_buffer_t.\n\nCleanup after @buffer and release any allocated resources.","declarations":[],"spell":"90:1-90:23|-1|1|2","extent":"89:1-99:2|-1|1|0","bases":[],"derived":[],"vars":[5],"uses":[],"callees":[]},{"id":2,"usr":17671651087109166375,"detailed_name":"void _mongoc_buffer_clear(int *buffer, int zero)","short_name_offset":5,"short_name_size":20,"kind":12,"storage":1,"hover":"","comments":"\n_mongoc_buffer_clear:\n@buffer: A mongoc_buffer_t.\n@zero: If the memory should be zeroed.\n\nClears a buffers contents and resets it to initial state. You can request\nthat the memory is zeroed, which might be useful if you know the contents\ncontain security related information.","declarations":[],"spell":"112:1-112:21|-1|1|2","extent":"111:1-121:2|-1|1|0","bases":[],"derived":[],"vars":[6,7],"uses":[],"callees":[]},{"id":3,"usr":2383541209639909130,"detailed_name":"int _mongoc_buffer_append(int *buffer, const int *data, int data_size)","short_name_offset":4,"short_name_size":21,"kind":12,"storage":1,"hover":"","comments":"","declarations":[],"spell":"125:1-125:22|-1|1|2","extent":"124:1-160:2|-1|1|0","bases":[],"derived":[],"vars":[8,9,10],"uses":[],"callees":[]},{"id":4,"usr":7953967088276826344,"detailed_name":"int _mongoc_buffer_append_from_stream(int *buffer, int *stream, int size, int timeout_msec, int *error)","short_name_offset":4,"short_name_size":33,"kind":12,"storage":1,"hover":"","comments":"\nmongoc_buffer_append_from_stream:\n@buffer; A mongoc_buffer_t.\n@stream: The stream to read from.\n@size: The number of bytes to read.\n@timeout_msec: The number of milliseconds to wait or -1 for the default\n@error: A location for a bson_error_t, or NULL.\n\nReads from stream @size bytes and stores them in @buffer. This can be used\nin conjunction with reading RPCs from a stream. You read from the stream\ninto this buffer and then scatter the buffer into the RPC.\n\nReturns: true if successful; otherwise false and @error is set.","declarations":[],"spell":"178:1-178:34|-1|1|2","extent":"177:1-226:2|-1|1|0","bases":[],"derived":[],"vars":[11,12,13,14,15],"uses":[],"callees":[]},{"id":5,"usr":13918756342751879766,"detailed_name":"int _mongoc_buffer_fill(int *buffer, int *stream, int min_bytes, int timeout_msec, int *error)","short_name_offset":4,"short_name_size":19,"kind":12,"storage":1,"hover":"","comments":"\n_mongoc_buffer_fill:\n@buffer: A mongoc_buffer_t.\n@stream: A stream to read from.\n@min_bytes: The minimum number of bytes to read.\n@error: A location for a bson_error_t or NULL.\n\nAttempts to fill the entire buffer, or at least @min_bytes.\n\nReturns: The number of buffered bytes, or -1 on failure.","declarations":[],"spell":"241:1-241:20|-1|1|2","extent":"240:1-301:2|-1|1|0","bases":[],"derived":[],"vars":[16,17,18,19,20],"uses":[],"callees":[]},{"id":6,"usr":9950595328145072155,"detailed_name":"int _mongoc_buffer_try_append_from_stream(int *buffer, int *stream, int size, int timeout_msec)","short_name_offset":4,"short_name_size":37,"kind":12,"storage":1,"hover":"","comments":"\nmongoc_buffer_try_append_from_stream:\n@buffer; A mongoc_buffer_t.\n@stream: The stream to read from.\n@size: The number of bytes to read.\n@timeout_msec: The number of milliseconds to wait or -1 for the default\n\nReads from stream @size bytes and stores them in @buffer. This can be used\nin conjunction with reading RPCs from a stream. You read from the stream\ninto this buffer and then scatter the buffer into the RPC.\n\nReturns: bytes read if successful; otherwise 0 or -1.","declarations":[],"spell":"318:1-318:38|-1|1|2","extent":"317:1-358:2|-1|1|0","bases":[],"derived":[],"vars":[21,22,23,24],"uses":[],"callees":[]}],"vars":[{"id":0,"usr":2481695983386491975,"detailed_name":"int *buffer","short_name_offset":5,"short_name_size":6,"hover":"","comments":"","declarations":[],"spell":"52:39-52:45|0|3|2","extent":"52:22-52:45|0|3|0","type":0,"uses":[],"kind":253,"storage":1},{"id":1,"usr":15564906941450585727,"detailed_name":"int *buf","short_name_offset":5,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"53:31-53:34|0|3|2","extent":"53:22-53:34|0|3|0","type":0,"uses":[],"kind":253,"storage":1},{"id":2,"usr":853274308756992350,"detailed_name":"int buflen","short_name_offset":4,"short_name_size":6,"hover":"","comments":"","declarations":[],"spell":"54:29-54:35|0|3|2","extent":"54:22-54:35|0|3|0","type":0,"uses":[],"kind":253,"storage":1},{"id":3,"usr":13982826049928811541,"detailed_name":"int realloc_func","short_name_offset":4,"short_name_size":12,"hover":"","comments":"","declarations":[],"spell":"55:40-55:52|0|3|2","extent":"55:22-55:52|0|3|0","type":0,"uses":[],"kind":253,"storage":1},{"id":4,"usr":10906328077979568584,"detailed_name":"void *realloc_data","short_name_offset":6,"short_name_size":12,"hover":"","comments":"","declarations":[],"spell":"56:28-56:40|0|3|2","extent":"56:22-56:40|0|3|0","type":1,"uses":[],"kind":253,"storage":1},{"id":5,"usr":5546041403050923373,"detailed_name":"int *buffer","short_name_offset":5,"short_name_size":6,"hover":"","comments":"","declarations":[],"spell":"90:42-90:48|1|3|2","extent":"90:25-90:48|1|3|0","type":0,"uses":[],"kind":253,"storage":1},{"id":6,"usr":7791947638898871265,"detailed_name":"int *buffer","short_name_offset":5,"short_name_size":6,"hover":"","comments":"","declarations":[],"spell":"112:40-112:46|2|3|2","extent":"112:23-112:46|2|3|0","type":0,"uses":[],"kind":253,"storage":1},{"id":7,"usr":8711135188892255223,"detailed_name":"int zero","short_name_offset":4,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"112:53-112:57|2|3|2","extent":"112:48-112:57|2|3|0","type":0,"uses":[],"kind":253,"storage":1},{"id":8,"usr":4841689660615582430,"detailed_name":"int *buffer","short_name_offset":5,"short_name_size":6,"hover":"","comments":"","declarations":[],"spell":"125:41-125:47|3|3|2","extent":"125:24-125:47|3|3|0","type":0,"uses":[],"kind":253,"storage":1},{"id":9,"usr":3131095229180788950,"detailed_name":"const int *data","short_name_offset":11,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"126:39-126:43|3|3|2","extent":"126:24-126:43|3|3|0","type":0,"uses":[],"kind":253,"storage":1},{"id":10,"usr":4516942660364138154,"detailed_name":"int data_size","short_name_offset":4,"short_name_size":9,"hover":"","comments":"","declarations":[],"spell":"127:31-127:40|3|3|2","extent":"127:24-127:40|3|3|0","type":0,"uses":[],"kind":253,"storage":1},{"id":11,"usr":16216537088006046707,"detailed_name":"int *buffer","short_name_offset":5,"short_name_size":6,"hover":"","comments":"","declarations":[],"spell":"178:53-178:59|4|3|2","extent":"178:36-178:59|4|3|0","type":0,"uses":[],"kind":253,"storage":1},{"id":12,"usr":1430506337807289028,"detailed_name":"int *stream","short_name_offset":5,"short_name_size":6,"hover":"","comments":"","declarations":[],"spell":"179:53-179:59|4|3|2","extent":"179:36-179:59|4|3|0","type":0,"uses":[],"kind":253,"storage":1},{"id":13,"usr":860336773588663820,"detailed_name":"int size","short_name_offset":4,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"180:43-180:47|4|3|2","extent":"180:36-180:47|4|3|0","type":0,"uses":[],"kind":253,"storage":1},{"id":14,"usr":16129398583730907219,"detailed_name":"int timeout_msec","short_name_offset":4,"short_name_size":12,"hover":"","comments":"","declarations":[],"spell":"181:44-181:56|4|3|2","extent":"181:36-181:56|4|3|0","type":0,"uses":[],"kind":253,"storage":1},{"id":15,"usr":11958571260274800348,"detailed_name":"int *error","short_name_offset":5,"short_name_size":5,"hover":"","comments":"","declarations":[],"spell":"182:50-182:55|4|3|2","extent":"182:36-182:55|4|3|0","type":0,"uses":[],"kind":253,"storage":1},{"id":16,"usr":3320661421836504115,"detailed_name":"int *buffer","short_name_offset":5,"short_name_size":6,"hover":"","comments":"","declarations":[],"spell":"241:39-241:45|5|3|2","extent":"241:22-241:45|5|3|0","type":0,"uses":[],"kind":253,"storage":1},{"id":17,"usr":13492823858409386370,"detailed_name":"int *stream","short_name_offset":5,"short_name_size":6,"hover":"","comments":"","declarations":[],"spell":"242:39-242:45|5|3|2","extent":"242:22-242:45|5|3|0","type":0,"uses":[],"kind":253,"storage":1},{"id":18,"usr":14058660365211794940,"detailed_name":"int min_bytes","short_name_offset":4,"short_name_size":9,"hover":"","comments":"","declarations":[],"spell":"243:29-243:38|5|3|2","extent":"243:22-243:38|5|3|0","type":0,"uses":[],"kind":253,"storage":1},{"id":19,"usr":4290053527715754069,"detailed_name":"int timeout_msec","short_name_offset":4,"short_name_size":12,"hover":"","comments":"","declarations":[],"spell":"244:30-244:42|5|3|2","extent":"244:22-244:42|5|3|0","type":0,"uses":[],"kind":253,"storage":1},{"id":20,"usr":183962093248554890,"detailed_name":"int *error","short_name_offset":5,"short_name_size":5,"hover":"","comments":"","declarations":[],"spell":"245:36-245:41|5|3|2","extent":"245:22-245:41|5|3|0","type":0,"uses":[],"kind":253,"storage":1},{"id":21,"usr":3466655678315204004,"detailed_name":"int *buffer","short_name_offset":5,"short_name_size":6,"hover":"","comments":"","declarations":[],"spell":"318:57-318:63|6|3|2","extent":"318:40-318:63|6|3|0","type":0,"uses":[],"kind":253,"storage":1},{"id":22,"usr":8244719860975730319,"detailed_name":"int *stream","short_name_offset":5,"short_name_size":6,"hover":"","comments":"","declarations":[],"spell":"319:57-319:63|6|3|2","extent":"319:40-319:63|6|3|0","type":0,"uses":[],"kind":253,"storage":1},{"id":23,"usr":17252905227246631195,"detailed_name":"int size","short_name_offset":4,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"320:47-320:51|6|3|2","extent":"320:40-320:51|6|3|0","type":0,"uses":[],"kind":253,"storage":1},{"id":24,"usr":533728946273268226,"detailed_name":"int timeout_msec","short_name_offset":4,"short_name_size":12,"hover":"","comments":"","declarations":[],"spell":"321:48-321:60|6|3|2","extent":"321:40-321:60|6|3|0","type":0,"uses":[],"kind":253,"storage":1},{"id":25,"usr":799021714543537590,"detailed_name":"MONGOC_LOG_DOMAIN","short_name_offset":0,"short_name_size":17,"hover":"#define MONGOC_LOG_DOMAIN \"buffer\"","comments":"","declarations":[],"spell":"27:9-27:26|-1|1|2","extent":"27:9-27:35|-1|1|0","uses":[],"kind":255,"storage":0},{"id":26,"usr":12792652914213721977,"detailed_name":"MONGOC_BUFFER_DEFAULT_SIZE","short_name_offset":0,"short_name_size":26,"hover":"#define MONGOC_BUFFER_DEFAULT_SIZE 1024","comments":"","declarations":[],"spell":"30:9-30:35|-1|1|2","extent":"30:9-30:40|-1|1|0","uses":["66:16-66:42|-1|1|4"],"kind":255,"storage":0},{"id":27,"usr":11615257687718557619,"detailed_name":"SPACE_FOR","short_name_offset":0,"short_name_size":9,"hover":"#define SPACE_FOR(_b, _sz)\n   (((ssize_t) (_b)->datalen - (ssize_t) (_b)->len) >= (ssize_t) (_sz))","comments":"","declarations":[],"spell":"34:9-34:18|-1|1|2","extent":"34:9-35:72|-1|1|0","uses":["139:9-139:18|-1|1|4","144:12-144:21|-1|1|4","196:9-196:18|-1|1|4","201:12-201:21|-1|1|4","268:9-268:18|-1|1|4","335:9-335:18|-1|1|4","340:12-340:21|-1|1|4"],"kind":255,"storage":0}]}