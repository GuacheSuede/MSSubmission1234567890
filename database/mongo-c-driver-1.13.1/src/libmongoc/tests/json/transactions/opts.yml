database_name: &database_name "transaction-tests"
collection_name: &collection_name "test"

data: []

tests:
  # run-command.json (from the specs repo) verifies that runCommand prohibits
  # non-primary read pref in a transaction. Just for the C Driver, test find
  # and aggregate same way.
  - description: aggregate fails with secondary read preference from transaction options

    operations:
      - &startTransactionSecondary
        name: startTransaction
        object: session0
        arguments:
          options:
            readPreference:
              mode: Secondary
      - name: aggregate
        object: collection
        arguments:
          pipeline:
            - $project: { _id: 1 }
          batchSize: 3
          session: session0
        result: &mustBePrimary
          errorContains: read preference in a transaction must be primary

  - description: aggregate fails with explicit secondary read preference

    operations:
      - &startTransaction
        name: startTransaction
        object: session0
      - name: aggregate
        object: collection
        arguments:
          pipeline:
            - $project: { _id: 1 }
          batchSize: 3
          session: session0
          readPreference:
            mode: Secondary
        result: *mustBePrimary

  - description: find fails with secondary read preference from transaction options

    operations:
      - *startTransactionSecondary
      - name: find
        object: collection
        arguments:
          session: session0
        result: *mustBePrimary

  - description: find fails with explicit secondary read preference

    operations:
      - *startTransaction
      - name: find
        object: collection
        arguments:
          session: session0
          readPreference:
            mode: Secondary
        result: *mustBePrimary

  # Explicit read preference primary is allowed

  - description: aggregate succeeds with explicit primary read preference

    operations:
      - *startTransaction
      - name: aggregate
        object: collection
        arguments:
          pipeline:
            - $project: { _id: 1 }
          batchSize: 3
          session: session0
          readPreference:
            mode: Primary
        result: []

  - description: find succeeds with explicit primary read preference

    operations:
      - *startTransaction
      - name: find
        object: collection
        arguments:
          session: session0
          readPreference:
            mode: Primary
        result: []

  - description: distinct succeeds with explicit primary read preference

    operations:
      - *startTransaction
      - name: distinct
        object: collection
        arguments:
          session: session0
          fieldName: _id
        result: []

  - description: countDocuments succeeds with explicit primary read preference

    operations:
      - *startTransaction
      - name: countDocuments
        object: collection
        arguments:
          session: session0
          filter: {}
          readPreference:
            mode: Primary
        result: 0

  # Test that explicit readConcern is prohibited in a transaction.

  - description: aggregate fails with explicit read concern

    operations:
      - *startTransaction
      - name: aggregate
        object: collection
        arguments:
          pipeline:
            - $project: { _id: 1 }
          batchSize: 3
          session: session0
          readConcern:
            level: majority
        result: &cannotSetReadConcern
          errorContains: cannot set read concern after starting transaction

  - description: find fails with explicit read concern

    operations:
      - *startTransaction
      - name: find
        object: collection
        arguments:
          session: session0
          readConcern:
            level: majority
        result: *cannotSetReadConcern

  - description: find fails with collection read concern and explicit read concern

    operations:
      - *startTransaction
      - name: find
        collectionOptions:
          readConcern:
            level: foo
        object: collection
        arguments:
          session: session0
          readConcern:
            level: majority
        result: *cannotSetReadConcern

  - description: runCommand fails with explicit read concern

    operations:
      - *startTransaction
      - name: runCommand
        object: database
        command_name: find
        arguments:
          session: session0
          command:
            find: *collection_name
          readConcern:
            level: majority
        result: *cannotSetReadConcern

  # Test that explicit writeConcern is prohibited in a transaction.

  - description: insertOne fails with explicit write concern

    operations:
      - *startTransaction
      - name: insertOne
        object: collection
        arguments:
          session: session0
          document: { _id: 1 }
          writeConcern: { w: 1 }
        result: &cannotSetWriteConcern
          errorContains: cannot set write concern after starting transaction

  - description: insertMany fails with explicit write concern

    operations:
      - *startTransaction
      - name: insertMany
        object: collection
        arguments:
          session: session0
          documents:
            -  _id: 1
          writeConcern: { w: 1 }
        result: *cannotSetWriteConcern

  - description: updateOne fails with explicit write concern

    operations:
      - *startTransaction
      - name: updateOne
        object: collection
        arguments:
          session: session0
          filter:
            _id: { $gt: 1 }
          update:
            $inc: { x: 1 }
          writeConcern: { w: 1 }
        result: *cannotSetWriteConcern

  - description: updateMany fails with explicit write concern

    operations:
      - *startTransaction
      - name: updateMany
        object: collection
        arguments:
          session: session0
          filter:
            _id: { $gt: 1 }
          update:
            $inc: { x: 1 }
          writeConcern: { w: 1 }
        result: *cannotSetWriteConcern

  - description: replaceOne fails with explicit write concern

    operations:
      - *startTransaction
      - name: replaceOne
        object: collection
        arguments:
          session: session0
          filter: {x: 1}
          replacement: {y: 1}
          writeConcern: { w: 1 }
        result: *cannotSetWriteConcern

  - description: deleteOne fails with explicit write concern

    operations:
      - *startTransaction
      - name: deleteOne
        object: collection
        arguments:
          session: session0
          filter: { _id: 1 }
          writeConcern: { w: 1 }
        result: *cannotSetWriteConcern

  - description: deleteMany fails with explicit write concern

    operations:
      - *startTransaction
      - name: deleteMany
        object: collection
        arguments:
          session: session0
          filter: { _id: 1 }
          writeConcern: { w: 1 }
        result: *cannotSetWriteConcern

  - description: bulkWrite fails with explicit write concern

    operations:
      - *startTransaction
      - name: bulkWrite
        object: collection
        arguments:
          session: session0
          requests:
            - name: insertOne
              arguments:
                document: {_id: 1}
            - name: updateOne
              arguments:
                filter: {_id: 1}
                update: {$set: {x: 1}}
          writeConcern: { w: 1 }
        result: *cannotSetWriteConcern

  - description: findOneAndUpdate fails with explicit write concern

    operations:
      - *startTransaction
      - name: findOneAndUpdate
        object: collection
        arguments:
          session: session0
          filter: {_id: 3}
          update:
            $inc: {x: 1}
          writeConcern: { w: 1 }
        result: *cannotSetWriteConcern

  - description: findOneAndReplace fails with explicit write concern

    operations:
      - *startTransaction
      - name: findOneAndReplace
        object: collection
        arguments:
          session: session0
          filter: {_id: 3}
          replacement: {x: 1}
          writeConcern: { w: 1 }
        result: *cannotSetWriteConcern

  - description: findOneAndDelete fails with explicit write concern

    operations:
      - *startTransaction
      - name: findOneAndDelete
        object: collection
        arguments:
          session: session0
          filter: {_id: 3}
          writeConcern: { w: 1 }
        result: *cannotSetWriteConcern

  - description: runCommand fails with explicit write concern

    operations:
      - *startTransaction
      - name: runCommand
        object: database
        command_name: insert
        arguments:
          session: session0
          command:
            insert: *collection_name
            documents:
              - _id : 1
          writeConcern: { w: 1 }
        result: *cannotSetWriteConcern
